os: linux
dist: xenial
language: cpp

matrix:
  include:

    # --------------- Clang on Linux --------------- #

    # Clang 6
    - name: "Clang 6"
      env: _CXX=clang++-6.0
      addons:
        apt:
          packages:
            - clang-6.0
          sources:
            - llvm-toolchain-xenial-6.0

    # Clang 7
    - name: "Clang 7"
      env: _CXX=clang++-7
      addons:
        apt:
          packages:
            - clang-7
          sources:
            - llvm-toolchain-xenial-7

    # Clang 8
    - name: "Clang 8"
      env: _CXX=clang++-8
      addons:
        apt:
          packages:
            - clang-8
          sources:
            - llvm-toolchain-xenial-8

    # --------------- GCC on Linux --------------- #

    # GCC 6
    - name: "GCC 6"
      env: _CXX=g++-6
      addons:
        apt:
          packages:
            - g++-6
          sources:
            - ubuntu-toolchain-r-test

    # GCC 7
    - name: "GCC 7"
      env: _CXX=g++-7
      addons:
        apt:
          packages:
            - g++-7
          sources:
            - ubuntu-toolchain-r-test

    # GCC 8
    - name: "GCC 8"
      env: _CXX=g++-8
      addons:
        apt:
          packages:
            - g++-8
          sources:
            - ubuntu-toolchain-r-test

    # GCC 9
    - name: "GCC 9"
      env: _CXX=g++-9
      addons:
        apt:
          packages:
            - g++-9
          sources:
            - ubuntu-toolchain-r-test

install:
  # install necessary packages
  - sudo apt install libhwloc-dev libopenmpi-dev libtool-bin

  # set the proper C++ compiler
  - export CXX=${_CXX}

  # set the maximum number of cores supported on Travis
  - JOBS=$(nproc --all)
  - echo "Using ${JOBS} processors"

  # set versions for requirements
  - CMAKE_VER="3.14.0"
  - SYSC_VER="2.3.3"
  - SST_VER="8.0.0"
  - LIBZMQ_VER="4.3.1"
  - CPPZMQ_VER="4.3.0"
  - ENVPY="3.6.7"

  # dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"

  # upgrade CMake to a more recent version
  - CMAKE_URL="https://cmake.org/files/v${CMAKE_VER%.[0-9]}/cmake-${CMAKE_VER}-Linux-x86_64.tar.gz"
  - curl -L ${CMAKE_URL} | tar xz -C ${DEPS_DIR}
  - export PATH=${DEPS_DIR}/cmake-${CMAKE_VER}-Linux-x86_64/bin:${PATH}
  - cmake --version
  - cd ${TRAVIS_BUILD_DIR}

  # install SystemC
  - SYSC_URL="https://www.accellera.org/images/downloads/standards/systemc/"
  - curl -L ${SYSC_URL}systemc-${SYSC_VER}.tar.gz | tar xz -C ${DEPS_DIR}
  - mkdir -p ${DEPS_DIR}/systemc-${SYSC_VER}/build
  - cd ${DEPS_DIR}/systemc-${SYSC_VER}/build && cmake -DCMAKE_CXX_STANDARD=11 .. && make -j${JOBS} && sudo make install
  - cd ${TRAVIS_BUILD_DIR}

  # install SST Core
  - SST_CORE_URL="https://github.com/sstsimulator/sst-core/releases/download/v${SST_VER}_Final/"
  - mkdir -p ~/.sst && touch ~/.sst/sstsimulator.conf
  - curl -L ${SST_CORE_URL}sstcore-${SST_VER}.tar.gz | tar xz -C ${DEPS_DIR}
  - cd ${DEPS_DIR}/sstcore-${SST_VER} && ./configure && make -j${JOBS} all && sudo make install
  - cd ${TRAVIS_BUILD_DIR}

  # # install SST Elements
  # - SST_ELEM_URL="https://github.com/sstsimulator/sst-elements/releases/download/v${SST_VER}_Final/"
  # - curl -L ${SST_ELEM_URL}sstelements-${SST_VER}.tar.gz | tar xz -C ${DEPS_DIR}
  # - mv ${DEPS_DIR}/sst-elements* ${DEPS_DIR}/sstelements-${SST_VER}
  # - cd ${DEPS_DIR}/sstelements-${SST_VER} && ./configure --disable-dependency-tracking && make -j${JOBS} all && sudo make install
  # - cd ${TRAVIS_BUILD_DIR}

  # # install zmq
  # - libzmq_url="https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VER}.tar.gz"
  # - cppzmq_url="https://github.com/zeromq/cppzmq/archive/v${CPPZMQ_VER}.tar.gz"
  # - curl -L ${libzmq_url} | tar xz -C ${DEPS_DIR}
  # - curl -L ${cppzmq_url} | tar xz -C ${DEPS_DIR}
  # - mkdir -p ${DEPS_DIR}/libzmq-${LIBZMQ_VER}/build
  # - cd ${DEPS_DIR}/libzmq-${LIBZMQ_VER}/build && cmake .. && sudo make -j${JOBS} install
  # - cd ${TRAVIS_BUILD_DIR}
  # - mkdir -p ${DEPS_DIR}/cppzmq-${CPPZMQ_VER}/build
  # - cd ${DEPS_DIR}/cppzmq-${CPPZMQ_VER}/build && cmake .. && sudo make -j${JOBS} install
  # - cd ${TRAVIS_BUILD_DIR}

  # install msgpack
  - ./install
  - cd ${TRAVIS_BUILD_DIR}

before_script:
  - cd examples
  - export SYSTEMC_DISABLE_COPYRIGHT_MESSAGE=1
  - pyenv local ${ENVPY}
  - sudo apt install tree
  - tree .

script:
  - make test_min
