os: linux
language: cpp
notifications:
  email: false

matrix:
  include:

    # Clang 6.0
    - name: "Trusty Clang 6.0"
      env: _CXX=clang++-6.0
      dist: trusty
      addons: &clang60
        apt:
          packages:
            - clang-6.0
            - g++-7
            - libhwloc-dev
            - libopenmpi-dev
            - libtool
            - openmpi-bin
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    # GCC 7
    - name: "Trusty GCC 7"
      env: _CXX=g++-7
      dist: trusty
      addons: &gcc7
        apt:
          packages:
            - g++-7
            - libhwloc-dev
            - libopenmpi-dev
            - libtool
            - openmpi-bin
          sources:
            - ubuntu-toolchain-r-test

    # GCC 7
    - name: "Xenial GCC 7"
      env: _CXX=g++-7
      dist: xenial
      addons: &gcc7
        apt:
          packages:
            - g++-7
            - libhwloc-dev
            - libopenmpi-dev
            - libtool-bin
          sources:
            - ubuntu-toolchain-r-test

    # Python 3
    - name: "Boilerplate Code Generator on Xenial"
      dist: xenial
      language: python
      python: 3.6

install:
  - |
    if [[ ! -z "${_CXX}" ]]; then

      # set the proper C++ compiler
      export CXX=${_CXX}

      # set the maximum number of cores supported on Travis
      JOBS=2

      # dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
      DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
      mkdir -p "${DEPS_DIR}"

      # upgrade CMake to a more recent version
      CMAKE_VER=3.14.0
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VER%.[0-9]}/cmake-${CMAKE_VER}-Linux-x86_64.tar.gz"
      curl -L ${CMAKE_URL} | tar xz -C ${DEPS_DIR}
      export PATH=${DEPS_DIR}/cmake-${CMAKE_VER}-Linux-x86_64/bin:${PATH}
      cmake --version
      cd ${TRAVIS_BUILD_DIR}

      # install SystemC
      SYSC="systemc-2.3.3"
      sysc_url="https://www.accellera.org/images/downloads/standards/systemc/"
      curl -kL ${sysc_url}${SYSC}.tar.gz | tar xz -C ${DEPS_DIR}
      mkdir -p ${DEPS_DIR}/${SYSC}/build
      cd ${DEPS_DIR}/${SYSC}/build && cmake -DCMAKE_CXX_STANDARD=11 .. && make -j${JOBS} && sudo make install
      cd ${TRAVIS_BUILD_DIR}

      # install SST Core
      SSTCORE="sstcore-8.0.0"
      sst_core_url="https://github.com/sstsimulator/sst-core/releases/download/v8.0.0_Final/"
      mkdir -p ~/.sst
      touch ~/.sst/sstsimulator.conf
      curl -L ${sst_core_url}${SSTCORE}.tar.gz | tar xz -C ${DEPS_DIR}
      cd ${DEPS_DIR}/${SSTCORE} && ./configure && make -j${JOBS} all && sudo make install
      cd ${TRAVIS_BUILD_DIR}

      # install SST Elements
      SSTELEM="sstelements-8.0.0"
      sst_elem_url="https://github.com/sstsimulator/sst-elements/releases/download/v8.0.0_Final/"
      curl -L ${sst_elem_url}${SSTELEM}.tar.gz | tar xz -C ${DEPS_DIR}
      mv ${DEPS_DIR}/sst-elements* ${DEPS_DIR}/${SSTELEM}
      cd ${DEPS_DIR}/${SSTELEM} && ./configure && make -j${JOBS} all && sudo make install
      cd ${TRAVIS_BUILD_DIR}

      # install msgpack
      MSGPACK="msgpack-3.1.1"
      msgpack_url="https://github.com/msgpack/msgpack-c/releases/download/cpp-3.1.1/"
      curl -L ${msgpack_url}${MSGPACK}.tar.gz | tar xz -C ${DEPS_DIR}
      cd ${DEPS_DIR}/${MSGPACK} && cmake -DMSGPACK_CXX11=ON . && sudo make install
      cd ${TRAVIS_BUILD_DIR}

    fi

before_script:
  - cd tests

script:
  - |
    [[ ! -z "${_CXX}" ]] && make unit-test || make generate-test
