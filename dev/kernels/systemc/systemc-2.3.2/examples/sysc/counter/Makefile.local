# CPP compiler
CXX = g++
# systemc configurations
SYSTEMC_HOME = /usr/local/_systemc-sys
SYSTEMC_LIB = ${SYSTEMC_HOME}/lib-linux64
SYSTEMC_INC = ${SYSTEMC_HOME}/include
SYSTEMC_FLAGS = -I. -I${SYSTEMC_INC} -L. -L${SYSTEMC_LIB} -Wl,-rpath=${SYSTEMC_LIB}
# CPP compiler flags
CXX_FLAGS = -lsystemc -lm

# define the executable file
EXE = test_exe

.PHONY: build
build: ${EXE}
	@echo "Program compiled successfully"

# define the CPP source files
SRCS = counter_tb.cpp

# define the CPP object files
OBJS = ${SRCS:.cpp=.o}
${EXE}: ${OBJS}
	${CXX} ${SYSTEMC_FLAGS} -o ${EXE} ${OBJS} ${CXX_FLAGS}

.cpp.o:
	${CXX} ${SYSTEMC_FLAGS} -c $< -o $@ ${CXX_FLAGS}

.PHONY: clean
clean:
	# clean out cache and temporary files
	@find . \( -name "*.o" -o -name ${EXE} -o -name "*.vcd" \) -type f -delete
