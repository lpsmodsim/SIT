#include "{module}.hpp"

#include "sstscit.hpp"

int sc_main(int argc, char *argv[]) {{

    // ---------- SYSTEMC UUT INIT ---------- //
    {port_defs};

    // Connect the DUT
    {module} DUT("{module}");
    {bindings};
    // ---------- SYSTEMC UUT INIT ---------- //

    // ---------- IPC SOCKET SETUP AND HANDSHAKE ---------- //
    zmq::context_t context(1);

    //  Socket to talk to server
    zmq::socket_t socket(context, ZMQ_REQ);
    socket.connect(&argv[1][0u]);

    SignalReceiver sh_in(socket);
    SignalTransmitter sh_out(socket);
    // ---------- IPC SOCKET SETUP AND HANDSHAKE ---------- //

    // ---------- INITIAL HANDSHAKE ---------- //
    sh_out.set("pid", getpid(), SC_UINT_T);
    sh_out.send();
    // ---------- INITIAL HANDSHAKE ---------- //

    while (true) {{

        sc_start(1, SC_NS);

        // RECEIVING
        sh_in.recv();

        if (!sh_in.alive()) {{
            break;
        }}
        {clock};
        {inputs};

        // SENDING
        {outputs};
        sh_out.send();

    }}

    socket.close();

    return 0;

}}
